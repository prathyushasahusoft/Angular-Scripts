{"version":3,"sources":["createCrudCtrl.js","createCustomerCtrl.js","crudctrl.js","customerCtrl.js","invoiceCreateCtrl.js","invoiceCtrl.js","invoiceViewCtrl.js","testCtrl.js","userCtrl.js"],"names":[],"mappingsnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"controllers.js","sourcesContent":["angular.module('dashboardApp')\n.controller('createCrudCtrl', ['$scope', 'crudService', '$q', '$location', 'ngDialog',\n\tfunction($scope, $crudService, $q, $location, $ngDialog){\n\n\t$scope.crud = $crudService.getCrud();\n\tconsole.log($scope.crud);\n\n\t$scope.captureCrud = function(){\n\t\tconsole.log($scope.crud);\n\n\t\tif ($scope.crud.action == 'Edit'){\n\t\t\t$crudService.update($scope.crud)\n\t\t\t\t.success(function(response){\n\t\t\t\t\t$crudService.resetCrud();\n\t\t\t\t\t$location.url(\"/crud-list\");\t\n\n\t\t\t\t})\n\t\t\t\t.error(function(response){\n\t\t\t\t\t$crudService.resetCrud();\n\t\t\t\t\t$scope.error = response;\n\t\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconsole.log($scope.crud);\n\t\t\t$crudService.save($scope.crud)\n\t\t\t\t.success(function(response){\n\t\t\t\t\t$location.url(\"/crud-list\");\t\n\t\t\t\t})\n\t\t\t\t.error(function(response){\n\t\t\t\t\t$scope.error = response;\n\t\t\t\t\t//console.log(response);\n\t\t\t\t});\n\t\t\t\t// .then(function(response){\n\t\t\t\t// \t$scope.error = response;\n\t\t\t\t// \tconsole.log(error);\n\t\t\t\t// \tconsole.log($scope.error)\n\t\t\t\t// });\t\n\t\t}\n\t\t\n\t\t// console.log(\"save the crud details\");\t\n\t}\n\n\t$scope.reset = function(){\n\t\t$scope.crud = null;\n\t\t$scope.crudForm.$setPristine();\n\t\tconsole.log(\"empty the form\");\t\n\t}\n\n\t$scope.delete = function (email) {\n\t\tvar index = $scope.crud.emailList.indexOf(email);\n\t\t$scope.crud.emailList.splice(index, 1);\n\n\t\tangular.forEach($scope.crud.sender, function(sender){\n\t\t\tif (sender.email == email.email){\n\t\t\t\tsender.status = '2';\n\t\t\t}\n\t\t});\n  \t};\n\n  \t$scope.resetCrud = function() {\n  \t\t$crudService.resetCrud();\n  \t}\n}]);","angular.module('dashboardApp')\n.controller('createCustomerCtrl', ['$scope', 'customerService', '$q', '$location', 'ngDialog',\n\tfunction($scope, $customerService, $q, $location, $ngDialog){\n\n\t$scope.customer = $customerService.getCustomer();\n\tconsole.log(\"loading app form\");\n\tconsole.log($scope.customer);\n\t$scope.captureCustomer = function(){\n\t\tconsole.log($scope.customer);\n\n\t\tif ($scope.customer.action == 'Edit'){\n\t\t\t$customerService.update($scope.customer)\n\t\t\t\t.success(function(response){\n\t\t\t\t\t$customerService.resetCustomer();\n\t\t\t\t\t$location.url(\"/customers\");\t\n\n\t\t\t\t})\n\t\t\t\t.error(function(response){\n\t\t\t\t\t$scope.error = response;\n\t\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconsole.log($scope.customer);\n\t\t\t$customerService.save($scope.customer)\n\t\t\t\t.success(function(response){\n\t\t\t\t\t$location.url(\"/customers\");\t\n\t\t\t\t})\n\t\t\t\t.error(function(response){\n\t\t\t\t\t$scope.error = response;\n\t\t\t\t});\n\t\t}\n\t}\n\n\t$scope.reset = function(){\n\t\t$scope.customer = null;\n\t\t$scope.customerForm.$setPristine();\n\t\tconsole.log(\"empty the form\");\t\n\t}\n\t$scope.pushNewEmail = function() {\n\t\t$scope.customer.emailList.push({email: $scope.newEmail, status: 0});\n\t\t$scope.newEmail = '';\n\t}\n\n\t$scope.delete = function (email) {\n\t\tvar index = $scope.customer.emailList.indexOf(email);\n\t\t$scope.customer.emailList.splice(index, 1);\n\n\t\tangular.forEach($scope.customer.sender, function(sender){\n\t\t\tif (sender.email == email.email){\n\t\t\t\tsender.status = '2';\n\t\t\t}\n\t\t});\n  \t};\n\n  \t$scope.resetCustomer = function() {\n  \t\tconsole.log(\"resetCustomer1\");\n  \t\t$customerService.resetCustomer();\n  \t}\n\n  \t$scope.editEmail = function(customer){\n  \t\t$ngDialog.open({ templateUrl: '/views/customer/editEmail.html', \n  \t\t\t\t\t\tcontroller: 'addEmailToCustomerCtrl',\n  \t\t\t\t\t\tclassName: 'ngdialog-theme-default' });\n  \t\t$ngDialog.close();\n  \t\t$scope.customer = $customerService.getCustomer();\n  \t\tconsole.log($scope.customer);\n  \t}\n}]);","angular.module('dashboardApp')\n.controller('crudCtrl', ['$scope', 'crudService', '$location', 'ngDialog',\n\tfunction($scope, $crudService, $location, $ngDialog){\n\n\t$crudService.get()\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in crudCtrl\");\n\t\t\t$scope.crudList = response.result;\n\n\t\t\tangular.forEach($scope.crudList, function(crud){\n\t\t\t\t//$crudService.getSenders(crud.id)\n\t\t\t\t//\t.then(function(response){\n\t\t\t\t//\t\tvar senders = response;\n\t\t\t\tvar twitter_handles = \"\";\n\t\t\t\tangular.forEach(crud.sender, function(sender){\n\t\t\t\t\tconsole.log(sender.twitter_handle);\n\t\t\t\t\ttwitter_handles = twitter_handles + \" \" + sender.twitter_handle;\n\t\t\t\t});\n\t\t\t\tcrud.twitter_handlers = twitter_handles;\n\t\t\t\t\n\t\t\t}); \n\n\t\t\tconsole.log(response);\n\t\t});\n\t\n\t$scope.delete = function (crud) {\n\t\tconsole.log(crud.id);\n\t\t$crudService.delete(crud.id);\n\t\tvar index = $scope.crudList.indexOf(crud);\n\t\t$scope.crudList.splice(index, 1);\n  \t};\n\n  \t$scope.editCrud = function(crud){\n  \t\t$crudService.setCrud(crud);\n  \t\t$location.url(\"/create-crud\");  \t\t \n  \t}\n\n  \t$scope.viewCrud = function(crud){\n  \t\t$crudService.setCrud(crud);\n  \t\t$location.url(\"/view-crud\");  \t\t\n  \t}\n\n  \t$scope.addEmail = function(crud){\n  \t\t$crudService.setCrud(crud);\n  \t\t$ngDialog.open({ templateUrl: '/views/crud/captureEmail.html', \n  \t\t\t\t\t\tcontroller: 'addEmailToCrudCtrl',\n  \t\t\t\t\t\tclassName: 'ngdialog-theme-default' });\n  \t}\n  \t\n  \t$scope.resetCrud = function() {\n  \t\t$crudService.resetCrud();\n  \t}\n}]);","angular.module('dashboardApp')\n.controller('customerCtrl', ['$scope', 'customerService', '$location', 'ngDialog',\n\tfunction($scope, $customerService, $location, $ngDialog){\n\t$customerService.get()\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in customerCtrl\");\n\t\t\t$scope.customerList = response.result;\n\t\t\tconsole.log(response);\n\t\t});\n\t\n\t$scope.delete = function (customer) {\n\t\tconsole.log(customer.id);\n\t\t$customerService.delete(customer.id);\n\t\tvar index = $scope.customerList.indexOf(customer);\n\t\t$scope.customerList.splice(index, 1);\n\t\t//$customerService.get();\n  \t};\n\n  \t$scope.editCustomer = function(customer){\n  \t\t$customerService.setCustomer(customer);\n  \t\t$location.url(\"/create-customer\");  \t\t \n  \t}\n\n  \t$scope.viewCustomer = function(customer){\n  \t\t$location.url(\"/view-customer\"); \n  \t\t$customerService.view(customer); \t\t\n  \t}\n  \t\n \t$scope.resetCustomer = function() {\n  \t\tconsole.log(\"resetCustomer1\");\n  \t\t$customerService.resetCustomer();\n  \t}\n  \t$scope.search = function() {\n  \t\tconsole.log(\"resetCustomer1\");\n  \t\t$customerService.resetCustomer();\n  \t}\n}]);","angular.module('dashboardApp')\n.controller('invoiceCreateCtrl', ['$scope', 'invoiceService','customerService', '$location', 'ngDialog',\n\tfunction($scope, $invoiceService, $customerService, $location, $ngDialog){\n  $scope.selectedCustomer = { id: \"\", first_name : \"select a customer\"};\n\t$customerService.get()\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in invoiceCtrl\");\n\t\t\t$scope.customerList = response.result;\n      console.log(\"name\");\n      console.log($scope.customerList[0].first_name);\n\t\t\t//console.log(response);\n\t\t});\n\t$scope.setCustomer = function (id, first_name) {\n    $scope.selectedCustomer.id = id;\n    $scope.selectedCustomer.first_name = first_name;\n    $scope.invoice.customer_id = id;    \n    /*$applicationService.getSenders(id)\n      .then(function(response){\n        $scope.campaign.senders = response.result;\n      }); */\n  }\n \n\t$scope.invoice = $invoiceService.getInvoice();\n  console.log(\"loading app form\");\n  console.log($scope.invoice);\n  $scope.captureInvoice = function(){\n    console.log($scope.invoice);\n    if ($scope.invoice.action == 'Edit'){\n      $invoiceService.update($scope.invoice)\n        .success(function(response){\n          $invoiceService.resetInvoice();\n          $location.url(\"/invoice\");  \n\n        })\n        .error(function(response){\n          $scope.error = response;\n        });\n    }\n    else{\n      console.log($scope.invoice);\n      $invoiceService.save($scope.invoice)\n        .success(function(response){\n          $location.url(\"/invoice\");  \n        })\n        .error(function(response){\n          $scope.error = response;\n        });\n    }\n  }\n\n  $scope.reset = function(){\n    $scope.invoice = null;\n    $scope.invoiceForm.$setPristine();\n    console.log(\"empty the form\");  \n  }\n\n  $scope.resetInvoice = function() {\n    console.log(\"resetInvoice1\");\n    $invoiceService.resetInvoice();\n  }\n\n}]);","angular.module('dashboardApp')\n.controller('invoiceCtrl', ['$scope', 'invoiceService', '$location', 'ngDialog',\n\tfunction($scope, $invoiceService, $location, $ngDialog){\n  $scope.action=\"edit\";\n\t$invoiceService.get()\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in invoiceCtrl\");\n\t\t\t$scope.invoiceList = response.result;\n\t\t\tconsole.log(response);\n\t\t});\n\t\n\t$scope.delete = function (invoice) {\n\t\tconsole.log(invoice.id);\n\t\t$invoiceService.delete(invoice.id);\n\t\tvar index = $scope.invoiceList.indexOf(invoice);\n\t\t$scope.invoiceList.splice(index, 1);\n\t\t//$invoiceService.get();\n  \t};\n\n\t$scope.editInvoice = function(invoice){\n    console.log(\"invoice1\");\n    console.log(invoice);\n\t\t$invoiceService.setInvoice(invoice);\n\t\t$location.url(\"/create-invoices\");  \t\t \n\t}\n\n\t$scope.viewInvoice = function(invoice){\n\t\t$location.url(\"/view-invoice\"); \n\t\t$invoiceService.setViewInvoice(invoice); \t\t\n\t}\n  \t\n \t$scope.resetInvoice = function() {\n  \t\tconsole.log(\"resetInvoice1\");\n  \t\t$invoiceService.resetInvoice();\n  \t}\n}]);","angular.module('dashboardApp')\n.controller('invoiceViewCtrl', ['$scope', 'invoiceService', '$location', 'ngDialog',\nfunction($scope, $invoiceService, $location, $ngDialog){\n \t$scope.invoiceView = $invoiceService.getInvoice();\n \t$invoiceService.view($scope.invoiceView)\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in invoiceCtrl\");\n\t\t\t$scope.invoice = response.result;\n\t\t\t$scope.invoice.items = [];\n            $scope.invoice.newItems = [];\n\t\t\t$scope.invoice.summary = [];\n\t\t\tconsole.log(response);\n\t\t});\n\t$invoiceService.getItems($scope.invoiceView)\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in invoiceCtrl\");\n\t\t\t$scope.invoice.items = response.result;\n\t\t\tangular.forEach($scope.invoice.items, function(invoiceItem){\t\t\t\n\t\t\t});\n\t\t\t$scope.invoice.summary = [];\n\t\t\tconsole.log(response);\n\t\t});\n\n\t$scope.addItem = function() {\n        $scope.invoice.newItems.push({quantity:0, unitcost:0, description:\"\",invoice_id:$scope.invoice.id});    \n        console.log(\"scope.invoice.newItems\");\n        console.log($scope.invoice.newItems);\n    }\n    $scope.removeItem = function(item) {\n        alert(item.id);\n    \t$invoiceService.removeItem(item);\n        $scope.invoice.items.splice($scope.invoice.items.indexOf(item), 1);    \n        $scope.invoice.sub_total = $scope.invoice.sub_total-(item.quantity*item.unitcost);\n    }\n    $scope.invoice_sub_total = function() {\n        var total = 0.00;\n        angular.forEach($scope.invoice.items, function(item, key){\n          total += (item.quantity * item.unitcost);\n        });\n        angular.forEach($scope.invoice.newItems, function(item, key){\n          total += (item.quantity * item.unitcost);\n        });\n        $scope.invoice.sub_total = total;\n        return total;\n    }\n    $scope.calculate_service_tax = function() {\n        return (($scope.invoice.service_tax * $scope.invoice_sub_total())/100);\n    }\n    $scope.calculate_education_cess = function() {\n        return (($scope.invoice.education_cess * $scope.invoice_sub_total())/100);\n    }\n    $scope.calculate_secondary_cess = function() {\n        return (($scope.invoice.secondary_cess * $scope.invoice_sub_total())/100);\n    }\n    $scope.calculate_grand_total = function() {\n        $grand_total = $scope.calculate_service_tax() + \n\t\t        \t   $scope.calculate_education_cess()+\n\t\t        \t   $scope.calculate_secondary_cess()+\n\t\t        \t   $scope.invoice_sub_total();\n         return $grand_total;        \t   \n    } \n    $scope.captureItems = function() {\n    \t$scope.invoice.summary.push({invoice_id:$scope.invoice.id,\n                                     sub_total:$scope.invoice.sub_total,\n         \t\t\t\t\t\t\t  service_tax:$scope.invoice.service_tax, \n         \t\t\t\t\t\t\t  education_cess:$scope.invoice.education_cess, \n         \t\t\t\t\t\t\t  secondary_cess:$scope.invoice.secondary_cess,\n         \t\t\t\t\t\t\t  grand_total: $grand_total});\t\n        console.log(\"scope.invoice.summary\");\n        console.log($scope.invoice.summary);\n    \t$invoiceService.saveItems($scope.invoice.newItems);\n    \t$invoiceService.saveSummary($scope.invoice.summary);\n        $location.url(\"/invoices\");\n    }\n\n}]);","angular.module('dashboardApp')\n.controller('testCtrl', ['$scope', function($scope){\n\tconsole.log(\"hello\");\n}]);","angular.module('dashboardApp')\n.controller('userCtrl', ['$scope', 'userService', '$location', 'ngDialog',\n\tfunction($scope, $userService, $location, $ngDialog){\n\t$scope.btn = \"Edit\";\n\t$scope.error = \"\";\n\t$scope.result = \"\";\n\t$userService.get()\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in userCtrl\");\n\t\t\t$scope.userList = response.result;\n\t\t\tangular.forEach($scope.userList, function(user){\n\t\t\t\tuser.active = \"inactive\";\n\t\t\t\tuser.action = 1;\t\t\t\n\t\t\t});\n\t\t\t$scope.userList[0].active = \"active\";\n\t\t\t$scope.userDetails($scope.userList[0]);\n\t\t\tconsole.log($scope.userList[0]);\n\t\t});\n\t$scope.userDetails = function (currentUser) {\t\n\t\tconsole.log(currentUser.id);\n\t\t$scope.error = \"\";\t\n\t\t$scope.result = \"\";\n\t\t$scope.userdetails = currentUser;\n\t\tcurrentUser.active = \"active\";\n\t\tangular.forEach($scope.userList, function(user){\n\t\t\t\tif(user.id != currentUser.id)\t{\n\t\t\t\t\tuser.active = \"inactive\";\t\n\t\t\t\t}\n\t\t\t});\n\t\t/*$userService.view(currentUser)\n\t\t.then(function(response){\n\t\t\t$scope.userdetails = response.result;\t\n\t\t\t$scope.userdetails.action = 1;\n\t\t\t$scope.userdetails.active = \"active\";\n\t\t\tconsole.log(response);\n\t\t});\n\t\tangular.forEach($scope.userList, function(user){\n\t\t\t\tif(user.id != currentUser.id)\t{\n\t\t\t\t\tuser.active = \"inactive\";\t\n\t\t\t\t}\n\t\t\t})*/\n  \t};\n\t$scope.delete = function (currentUser) {\n\t\tconsole.log(currentUser.id);\n\t\t$userService.delete(currentUser.id);\n\t\t$scope.userDetails(currentUser);\n\t\tcurrentUser.active = \"active\";\n\t\t$userService.get()\n\t\t.then(function(response){\n\t\t\tconsole.log(\"success in userCtrl\");\n\t\t\t$scope.userList = response.result;\n\t\t\tangular.forEach($scope.userList, function(user){\n\t\t\t\tif(user.id == currentUser.id)\t\n\t\t\t\t\tuser.active = \"active\";\n\t\t\t\telse\n\t\t\t\t\tuser.active = \"inactive\";\t\t\t\n\t\t\t}); \n\n\t\t\tconsole.log(response);\n\t\t});\n\t\t$location.url(\"/manage-users\");\n  \t};\n\n  \t$scope.editUser = function(user){\n  \t\t$scope.error = \"\";\t\n\t\t$scope.result = \"\";\n  \t\t//$userService.setUser(user);\n  \t\tif($scope.btn == \"Edit\"){\n\t  \t\tuser.action = 0; \n\t  \t\t$scope.btn = \"view\";\n\t  \t}\n\t  \telse{\n\t  \t\t$userService.view(user)\n\t\t\t.then(function(response){\n\t\t\t\tconsole.log(\"success in userCtrl\");\n\t\t\t\t$scope.userdetails = response.result;\t\n\t\t\t\t$scope.userdetails.action = 1;\n\t\t\t\tconsole.log(response);\n\t\t\t});\n\t  \t\tuser.action = 1; \n\t  \t\t$scope.btn = \"Edit\";\n\t  \t}\n  \t\tconsole.log(user); \t\t \n  \t}\n  \t$scope.edit = function(user){\n  \t\t/*if(user.name.length == 0){\n\t  \t\t\t$scope.error.name = 1;\n\t  \t\t\treturn;\n\t  \t\t}*/\n  \t\t$userService.update(user)\n  \t\t\t.success(function(response){\n\t\t\t\t\tconsole.log(\"sucesss in userCtrl\");\n\t\t\t\t\t$scope.result = response;\n\t\t\t\t})\n\t\t\t\t.error(function(response){\n\t\t\t\t\t$scope.error = response;\n\t\t\t\t}); \t\t \n  \t}\n\n  \t$scope.viewUser = function(user){\n  \t\t$userService.setUser(user);\n  \t\t$location.url(\"/view-user\");  \t\t\n  \t}\n\n  \t$scope.addEmail = function(user){\n  \t\t$userService.setUser(user);\n  \t\t$ngDialog.open({ templateUrl: '/views/user/captureEmail.html', \n  \t\t\t\t\t\tcontroller: 'addEmailToUserCtrl',\n  \t\t\t\t\t\tclassName: 'ngdialog-theme-default' });\n  \t}\n  \t\n  \t$scope.resetUser = function() {\n  \t\t$userService.resetUser();\n  \t}\n}]);"],"sourceRoot":"/source/"}